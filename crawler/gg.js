//aid는 마침표 2개로 구분된 숫자들로 이루어진 문자열 
let aid = ["4221.4002.335203","4221.4001.114850","4221.3999.292668","4221.3998.434118","4221.3998.401026","4221.3998.62895","4221.3997.205795","4221.3997.26123","4221.3996.213443","4221.3995.343510","4221.3995.36847","4221.3995.30138","4221.3994.384149","4221.3994.368075","4221.3993.431599","4221.3993.276734","4221.3992.378091","4221.3991.464628","4221.3991.370545","4221.3991.270147","4221.3991.3888","4221.3991.1655","4221.3990.416009","4221.3990.394964","4221.3990.249900","4221.3990.225126","4221.3990.62114","4221.3989.399232","4221.3989.316151","4221.3988.359517","4221.3988.37572","4221.3987.419576","4221.3987.383807","4221.3987.357474","4221.3987.242926","4221.3987.171169","4221.3987.102369","4221.3987.63620","4221.3987.36990","4221.3986.309129","4221.3986.151292","4221.3986.66293","4221.3986.5943","4221.3985.269080","4221.3985.18035","4221.3984.325498","4221.3984.324545","4221.3984.223155","4221.3984.74877","4221.3984.21016","4221.3983.507417","4221.3983.364105","4221.3983.3491","4221.3982.1249325","4221.3982.83302","4221.3981.476480","4221.3981.318590","4221.3981.221856","4221.3981.213099","4221.3981.137111","4221.3981.10678","4221.3980.394550","4221.3980.138277","4221.3980.71863","4221.3980.17374","4221.3979.1091253","4221.3979.1090195","4221.3979.381724","4221.3978.718916","4221.3978.587790","4221.3978.520004","4221.3978.137337","4221.3978.113504","4221.3978.39523","4221.3977.573162","4221.3977.485222","4221.3977.458775","4221.3977.388327","4221.3977.384781","4221.3977.323236","4221.3977.220113","4221.3977.213796","4221.3977.13192","4221.3977.6679","4221.3976.372097","4221.3976.360742","4221.3976.304764","4221.3976.303735","4221.3976.303131","4221.3976.251606","4221.3976.111238","4221.3976.10462","4221.3975.8649","4221.3975.7563","4221.3974.390601","4221.3974.311557","4221.3974.262180","4221.3974.188603","4221.3974.187635","4221.3974.8802","4221.3974.7357","4221.3974.1430","4221.3973.412876","4221.3973.402165","4221.3973.375025","4221.3973.179016","4221.3973.169822","4221.3973.107073","4221.3972.392226","4221.3972.352420","4221.3972.5852","4221.3971.222168","4221.3970.366747","4221.3970.5104","4221.3969.5330","4221.3968.463517","4221.3968.169371","4221.3968.26680","4221.3968.11563","4221.3968.2273","4221.3967.519488","4221.3967.111844","4221.3967.6224","4221.3966.239853","4221.3965.250949","4221.3964.331642","4221.3964.326164","4221.3964.272359","4221.3964.44567","4221.3964.10747","4221.3963.262264","4221.3962.204461","4221.3962.183785","4221.3962.35090","4221.3962.32136","4221.3961.278248","4221.3961.230733","4221.3961.60876","4221.3961.11815","4221.3960.346755","4221.3959.140212","4221.3958.148307","4221.3958.114226","4221.3957.312293","4221.3957.455845","4221.3957.455848","4221.3957.43719","4221.3957.455832","4221.3956.243343","4221.3956.229915","4221.3956.199698","4221.3956.112801","4221.3956.35152","4221.3955.180629","4221.3954.62750","4221.3954.11146","4221.3952.123095","4221.3952.70545","4221.3952.42437","4221.3952.8575","4221.3951.546445","4221.3951.845969","4221.3951.270597","4221.3951.102210","4221.3951.845982","4221.3951.44780","4221.3950.321129","4221.3950.319120","4221.3950.631752","4221.3950.26206","4221.3950.21723","4221.3950.17132","4221.3950.6662","4221.3950.2307","4221.3949.71463","4221.3949.27827","4221.3948.305671","4221.3948.305604","4221.3947.279600","4221.3947.661754","4221.3947.111090","4221.3947.92387","4221.3946.694430","4221.3946.303915","4221.3946.293866","4221.3946.224062","4221.3946.199621","4221.3946.694426","4221.3945.355750","4221.3945.59785","4221.3944.311745","4221.3944.304995","4221.3944.661460","4221.3944.84262","4221.3943.316457","4221.3943.290629"];


let parse_impact = {
    idx:0,
    max:0,

    init: function(){
        this.max = aid.length;
        console.log("init");
        this.parse(); 
    },

    parse: function(){
        let that = this;

        if(that.idx<that.max){
            let acd = aid[that.idx];
            let getUrl = `https://app.impact.com/secure/lightbox/mp/getActionDetail.ihtml?cid=4221&acid=${acd}&d=lightbox&fromPopup=1`;

            that.getData(getUrl, acd);

            let rnd = Math.floor(Math.random() * 2500) + 2500;
            //2.5 ~ 5초 간격으로 검색한다.
            setTimeout(function () {
                that.idx++;
                that.parse();
            }, rnd);
        }
    },

    getData: function(url, acd){
        console.log(url);
        let request = new XMLHttpRequest();
        request.open("GET",url,false);
        //url에 get 요청을 보낼 것이며, 비동기 방식으로 실행될것이다(3번째 파라미터 async : true)
        request.onreadystatechange = function(){
            if(request.readyState === 4 && request.status === 200){
                //제대로 통신 되었는지를 확인한다.
                let type = request.getResponseHeader("Content-Type");
                //잘 통신이 되었다면 받아온 데이터의 타입을 확인한다.
                   if (type.match(/^text/)){
                       let txt = (request.responseText);
                       //데이터 타입이 텍스트가 맞다면 받아온 데이터를 txt라는 변수에 넣는다.

                       $(".site").html("처리중 - "+acd);

                       let address = acd.replace(/[.]/g, "_");

                       txt = txt.slice(txt.indexOf('uitkSeparateEntry'));
                       txt = txt.slice(txt.indexOf('URL'));
                       console.log(txt);
                       txt = txt.slice(txt.indexOf('href="')+6);
                       txt = txt.slice(0, txt.indexOf('>')-1);
                        console.log(txt);                    
                        firebase.database().ref("impact/"+address).set(txt);

                 }else{
                     console.log('응답이 텍스트가 아닌 형태로 왔습니다')
                     //데이터 타입이 텍스트가 아니라면 문제가 발생한 것이다.
                 }
             }else{
                 console.log('사이트 응답 지연중')
                 //비동기 방식의 특성상, 이 로그는 서버 응답이 아무리 빨라도 몇 차례 뜰 것이다.
             }
         };
         request.send(null)
    }

}
